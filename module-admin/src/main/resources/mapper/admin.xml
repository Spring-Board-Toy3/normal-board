<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.adminapplication.admin.AdminRepository">

<!--    <select id="findAllUsers" resultType="com.core.entity.User">-->
<!--        select * from user_tb-->
<!--    </select>-->

    <select id="findSortedAllUsersInfo" resultType="com.adminapplication.dto.AllUsersInfoResponseDto">
        SELECT user_tb.id, nickname, email, role, qty_of_board, qty_of_comment
        FROM user_tb
            LEFT OUTER JOIN (
            SELECT user_tb.id, count(comment_tb.id) qty_of_comment
            FROM user_tb
            LEFT OUTER JOIN comment_tb
            ON user_tb.id = comment_tb.user_id GROUP BY user_tb.id
        ) AS join_c ON user_tb.id = join_c.id
            LEFT OUTER JOIN (
            SELECT user_tb.id, count(board_tb.id) qty_of_board
            FROM user_tb
            LEFT OUTER JOIN board_tb
            ON user_tb.id = board_tb.user_id GROUP BY user_tb.id
        ) AS join_b ON user_tb.id = join_b.id ${orderBy} ${target} ${desc}
    </select>

    <update id="updateRoleById">
        UPDATE user_tb SET role = #{role} WHERE id = #{id}
    </update>

    <select id="countBoardSizeByUserId" resultType="Integer">
        select count(id) from board_tb WHERE user_id = #{id}
    </select>

    <select id="findUserById" resultType="com.core.entity.User">
        select * from user_tb WHERE id = #{id}
    </select>

    <select id="findAllBoards" resultType="com.adminapplication.dto.AllBoardResponseDto">
        SELECT b.id, u.nickname, b.title, b.status, DATE_FORMAT(b.created_at, '%y-%m-%d %h:%i') created_at
        FROM board_tb b LEFT OUTER JOIN user_tb u ON user_id = u.id;
    </select>

    <update id="updateStatusById">
        UPDATE board_tb SET status = #{status} WHERE id = #{id}
    </update>

    <select id="findBoardById" resultType="com.core.entity.Board">
        SELECT * FROM board_tb WHERE id = #{id}
    </select>

    <delete id="deleteBoardById">
        DELETE FROM board_tb WHERE id = #{id}
    </delete>

    <delete id="deleteAllCommentsByBoardId">
        DELETE FROM comment_tb WHERE board_id = #{id}
    </delete>

    <select id="countCommentSizeByBoardId" resultType="Integer">
        select count(id) from comment_tb WHERE board_id = #{id}
    </select>



</mapper>